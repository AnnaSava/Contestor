@page "/contests"
@using Contestor.Service.Contract
@using Contestor.Data.Contract.Models
@inject IContestService contestService
@inject NavigationManager NavigationManager

<h3>Contests</h3>

<NavLink class="nav-link" href="AddContest">
    <span class="oi oi-plus" aria-hidden="true">Add New</span>

</NavLink>

@if (ContestsList is null)
{
    <p><em>Loading... !</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Title</th>
                <th>Description</th>
                <th>ProcessName</th>
                <th>Status</th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var contest in ContestsList)
            {
                <tr>
                    <td>@contest.Id</td>
                    <td>@contest.Title</td>
                    <td>@contest.Description</td>
                    <td>@contest.ProcessName</td>
                    <td>@contest.Status</td>
                    <td>
                        <a class="nav-link" href="EditContest/@contest.Id">
                            <span class="oi oi-pencil" aria-hidden="true">Edit</span>
                        </a>
                    </td>
                    <td>
                        <a class="nav-link" href="Delete/@contest.Id">
                            <span class="oi oi-trash" aria-hidden="true">Delete</span>
                        </a>
                    </td>
                    <td>
                        <a class="nav-link" href="Start/@contest.Id">
                            <span class="oi oi-media-play" aria-hidden="true">Start</span>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    List<ContestModel> ContestsList;
    protected override async Task OnInitializedAsync()
    {
        var t = await contestService.GetAll(1, 10);
        ContestsList = t.ToList();
    }
}
