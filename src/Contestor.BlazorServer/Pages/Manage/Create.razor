@page "/manage/contest/create"
@using Contestor.Proto
@using Contestor.Proto.Data
@using Contestor.Proto.BpmEngine
@inject IContestViewService contestService
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        <h3>Создать новый конкурс</h3>
        <hr />

        <form>
            <div class="row">
                <div class="col-md-8">
                    <div class="form-group">
                        <label for="Title" class="control-label">Название</label>
                        <input form="Title" class="form-control" @bind="@Contest.Title" />
                    </div>
                    <div class="form-group">
                        <label for="Description" class="control-label">Описание</label>
                        <input form="Description" class="form-control" @bind="@Contest.Description" />
                    </div>
                    <div class="form-group">
                        <label for="ProcessKey" class="control-label"></label>
                        <select @bind="@Contest.ProcessKey" class="form-control">
                            <option value="">Выбрать схему</option>
                            @if (ProcessesDict != null)
                                @foreach (var process in ProcessesDict)
                                {
                                    <option value="@process.Key">@process.Value</option>
                                }
                        </select>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <input type="button" class="btn btn-primary" @onclick="@CreateContest" value="Save" />
                        <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
                    </div>
                </div>
            </div>
        </form>
    </Authorized>
</AuthorizeView>

@code {
    Dictionary<string, string> ProcessesDict;
    protected override async Task OnInitializedAsync()
    {
        ProcessesDict = await contestService.GetProcessesDictionary();
    }

    ContestModel Contest = new ContestModel();
    protected async void CreateContest()
    {
        await contestService.Create(Contest);
        NavigationManager.NavigateTo("/manage/contest");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("/manage/contest");
    }
}
