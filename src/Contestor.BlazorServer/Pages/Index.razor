@page "/"
@using System.Security.Claims
@using Contestor.Data.Contract.Models
@using Contestor.Service.Contract
@inject IContestService contestService
@inject AuthenticationStateProvider GetAuthenticationStateAsync

<h3>Конкурсы на голосовании</h3>
@if (VotingContestsList is null)
{
    <p><em>Загрузка...</em></p>
}
else
{
    <table class="table">
        @foreach (var contest in VotingContestsList)
        {
            <tr>
                <td>@contest.Title</td>
                <td>
                    <AuthorizeView>
                        <Authorized>
                            <a class="nav-link" href="/contest/@contest.Id/vote">
                                <span class="oi oi-pencil" aria-hidden="true">Голосовать</span>
                            </a>
                        </Authorized>
                    </AuthorizeView>
                </td>
            </tr>
        }
    </table>

    <a class="nav-link" href="/voting">
        <span class="oi oi-pencil" aria-hidden="true">Все голосования</span>
    </a>
}

<h3>Актуальные конкурсы</h3>

@if (ContestsList is null)
{
    <p><em>Загрузка...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Title</th>
                <th>Description</th>
                <th>ProcessName</th>
                <th>Status</th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var contest in ContestsList)
            {
                <tr>
                    <td>@contest.Id</td>
                    <td>
                        <a class="nav-link" href="/contest/@contest.Id">
                            <span aria-hidden="true">@contest.Title</span>
                        </a>
                    </td>
                    <td>@contest.Description</td>
                    <td>@contest.ProcessName</td>
                    <td>@contest.Status</td>
                    <td>
                        <AuthorizeView>
                            <Authorized>
                                @if (contest.Status == "regopen")
                                {
                                    @if (contest.VisitorIsParticipant)
                                    {


                                        <span>Вы участвуете</span>
                                    }
                                    else
                                    {
                                        <a class="nav-link" href="/contest/@contest.Id">
                                            <span class="oi oi-pencil" aria-hidden="true">Принять участие</span>
                                        </a>
                                    }
                                }
                                else if (contest.Status == "open")
                                {
                                    @if (contest.VisitorWorksCount < contest.MaxWorksCount)
                                    {
                                        <a class="nav-link" href="/contest/@contest.Id/sendwork">
                                            <span class="oi oi-pencil" aria-hidden="true">Прислать работу</span>
                                        </a>
                                    }
                                    else
                                    {
                                        <span>Вы уже прислали допустимое количество работ</span>
                                    }
                                }
                            </Authorized>
                            <NotAuthorized>
                                @if (contest.Status == "regopen")
                                {
                                    <a class="nav-link" href="/Account/Register?contestId=@contest.Id">
                                        <span class="oi oi-pencil" aria-hidden="true">Принять участие</span>
                                    </a>
                                }
                                else if (contest.Status == "open" && contest.AutoRegEnabled)
                                {
                                    <a class="nav-link" href="/Account/Register?contestId=@contest.Id&sendwork=@true">
                                        <span class="oi oi-pencil" aria-hidden="true">Прислать работу</span>
                                    </a>
                                }
                            </NotAuthorized>
                        </AuthorizeView>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    string UserName = string.Empty;
    private string _authMessage;
    private string _surnameMessage;
    private IEnumerable<Claim> _claims = Enumerable.Empty<Claim>();

    List<ContestModel> ContestsList;
    List<ContestModel> VotingContestsList;

    protected async override Task OnInitializedAsync()
    {
        var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        var user = authstate.User;

        long id = 0;
        if (user.Identity.IsAuthenticated)
        {
            _authMessage = $"{user.Identity.Name} is authenticated.";
            _claims = user.Claims;
            UserName = user.Identity.Name;
            id = long.Parse(user.FindFirst(ClaimTypes.NameIdentifier).Value);
        }
        else
        {
            _authMessage = "The user is NOT authenticated.";
        }

        ContestsList = (await contestService.GetAllForNewParticipants(id, 1, 10)).ToList();
        VotingContestsList = (await contestService.GetTopForVoting(id)).ToList();
    }
}